@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

AddElementTag("v1.0", $borderColor="#d73027")
AddElementTag("v1.1", $fontColor="#ffffff")
AddElementTag("backup", $fontColor="orange")

AddRelTag("backup", $textColor="orange", $lineColor="orange", $lineStyle = DashedLine())
AddRelTag("request", $textColor="blue", $lineColor="blue", $lineStyle = SolidLine())

Person(User, "Front", "")
Container(PartnerSystem, "Внешняя система партнера")

System_Boundary("OuterSystem", "Система автоматизации магазина стройматериалов") {

    Container(APIGateway, "APIGateway", "API управления ")

    System_Boundary("Users", "Домен пользовательского управления") {
        Container(Admin, "Микросервис авторизации/аутенфикации", "Проверяет и предоставляет доступ к системе")
        ContainerDb(UsersDb, "База данных пользователей")
        Rel_D(Admin, UsersDb, "Read/Write", "Ищет пользователей в БД и устанавливает их права")
    }
    System_Boundary("Products", "Домен товаров") {
        Container(productSearch, "Микросервис поиска товара по складу", "Поиск местоположения товара на складе и актуализация информации об этом")
        ContainerDb(ProductionDB, "БД товаров на складе")
        Container(barcodeserv, "Микросервис генерации штрих-кодов", "Генерирует штрих-коды для товаров")
        Rel(productSearch, barcodeserv, "Запрос на генерацию штрих-кода")
        Rel_D(productSearch, ProductionDB, "Read/Write", "Поиск записи о товаре в БД. Актуализация местоположения товара на складе")
        Container(prcash, "Reddis", "КЭШ для часто искомых товаров")
        Rel_R(productSearch, prcash, "Поиск товара в КЭШе")
    }

    System_Boundary("Documents", "Домен документооборота") {
        Container(docvalidation, "Микросервис обработки документации", "Осуществляет проверку документации соответствию правилам")
        ContainerDb(docDb, "БД Документов")
        Rel(docvalidation, docDb, "Read", "Проверка записи на соответствие правилам")
    }

    System_Boundary("Finances", "Домен управления сделками") {
        Container(accounting, "Микросервис финансовых операций", "Ведет учет закупок и продаж товаров")
        ContainerDb(accountingDb, "БД закупок и продаж", "")
        Rel(accounting, accountingDb, "Read/Write", "Фиксирует операции в БД")
    }

    System_Boundary("Delivery", "Домен доставки") {
        Container(deliverySys, "Микросервис управления доставками", "Формирует заявки на доставку")
        ContainerDb(deliveryDb, "БД заявок на доставку", "Хранит записи о текущих доставках")
        Rel(deliverySys, deliveryDb, "Read/Write", "Фиксирует новые заявки в БД, обновляет статус заявок и удаляет неактуальные заявки")
    }

    System_Boundary("Orders", "Домен заказов") {
        Container(OrdersSys, "Микросервис управления заказами", "Создает, удаляет и изменяет заявки на заказ")
        ContainerDb(OrdersDb, "БД заказов", "Ведение журнала заказов")
        Rel(OrdersSys, OrdersDb, "Read/Write", "Создает запись о заявке, актуализирует данные записи о заявке, удаляет неактуальные заявки")
    }
  

    System_Boundary("Partners", "Домен внешних взаимодействий") {
        Container(communication, "Микросервис взаимодействия с внешними системами", "Запрашивает информацию со складов партнеров и формирует поручение на партнерскую доставку")
        ContainerDb(communicationDb, "БД записей ответов внешних систем. Шардированная", "shard", "Записи о наличии товара на складе партнера. Записи о партнерских доставках")
        Rel(communication, communicationDb, "Read/Write")

    }

    ContainerQueue(Rabbit, "RabbitMQ", "Очереди сообщений")
    ContainerQueue(Kafka, "Kafka", "Топики для сообщений между микросервисами")
}

Rel_U(OrdersSys, Kafka, "Оправка сообщения о созданном заказе")
Rel_U(accounting, Kafka, "Проверяет есть ли новые операции по заказам")

Rel_U(OrdersSys, Rabbit, "Сообщение о новом заказе на доставку")
Rel_D(Rabbit, deliverySys, "Сообщение о новом заказе")

Rel(OrdersSys, productSearch, "Запрос проверки наличия товара")
Rel(OrdersSys, communication, "Запрос проверки наличия товара")

Rel_U(communication, PartnerSystem, "Запрос данных о наличии товара на складе партнера")

Rel(accounting, docvalidation, "Внесение изменений в отчетность")
Rel(productSearch, docvalidation, "Запрос сведений о товаре из документации")

Rel_D(APIGateway, OrdersSys, "Создание и изменение заказа")
Rel_D(User, APIGateway, "Взаимодействие с системой")
Rel_D(APIGateway, Admin, "Авторизация")





SHOW_LEGEND()
@enduml